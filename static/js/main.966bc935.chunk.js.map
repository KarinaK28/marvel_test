{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","console","log","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","componentWillUnmount","clearInterval","timerId","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","renderItems","arr","item","props","onCharSelected","disabled","Skeleton","_Fragment","CharInfo","charId","componentDidUpdate","prevProps","prevState","skeleton","i","ErrorBoundary","componentDidCatch","errorInfo","App","selectedChar","decoration","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.966bc935.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"http://localhost:3000/\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"http://localhost:3000/\">Characters</a></li>\n                    /\n                    <li><a href=\"http://localhost:3000/\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n            // <img src={process.env.PUBLIC_URL + '/error.gif'}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\r\n    _apiKey = 'apikey=f57e7806fa06cc3379961f9fe439586a';\r\n\r\n    _baseOffset = 210;\r\n\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n    \r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async(offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n       // return this.getResource(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\r\n    }\r\n\r\n     getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n      //  return this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n     }\r\n\r\n     _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n     }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\n//import thor from '../../resources/img/thor.jpeg';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n//     constructor(props) {\n//         super(props);\n//  //       this.updateChar();\n//         console.log('constructor');\n//     }\n    state = {\n        char: {},\n        loading: true,\n        error: false    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n\n   //     this.foo.bar = 0;\n        this.updateChar();\n        //this.timerId = setInterval(this.updateChar, 3000);\n        console.log('mount');\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n        console.log('unmount');\n    }\n\n    onCharLoaded = (char) => {\n        console.log('update');\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            // .getAllCharacters()\n            // .then(res => console.log(res))\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n            // .then(res => {\n            //     this.setState(res)\n            // })\n    }\n\n    render() {\n        console.log('render');\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content =!(loading || error) ? <View char={char}/> : null;\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n               {/* {loading ? <Spinner/> : <View char={char}/>} */}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar}className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n\n}\n    \n\nconst View = ({char}) => {\n        const {name, description, thumbnail, homepage, wiki } = char;\n        let imgStyle = {'objectFit' : 'cover'};\n        if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            imgStyle = {'objectFit' : 'contain'};\n        }\n        return (\n            <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"  style={imgStyle}/>\n            <div className=\"randomchar__info\">  \n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        )\n}\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n//import abyss from '../../resources/img/abyss.jpg';\n\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,//обычный которыйй запускается при первичной загрузке первый 9 персонажей\n        error: false,\n        newItemLoading: false,//относится к загрузке новых элементов,после вызова onRequest \n        offset: 1548,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n //       this.foo.bar = 0;\n        // this.marvelService.getAllCharacters()\n        //     .then(this.onCharListLoaded)\n        //     .catch(this.onError)\n        //меняем все это на onRequest, когда наш компонент будет создан,\n// те вызван хук   componentDidMount(), вызывается метод onRequest(),\n// без аргумента, те offset- будет null, обращаемся к серверу\n// this.marvelService.getAllCharacters()-так же аргумент никакой \n//не передается, те в сервисе будет подставлен базовый отступ \n//(offset = this._baseOffset)(в компоненте MarvelService - 210),\n//это впервыц раз когда компонент был создан, но потом, когда \n// вызыввем вручную метод onRequest по клику на кнопки , то уже будет подставляться \n//число ,которое будет формировать другой запрос\n    }\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {//запустился процесс и чтото грузится\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {//загрузились новые данные\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n        \n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => this.props.onCharSelected(item.id)}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none': 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\n\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\n// import thor from '../../resources/img/thor.jpeg';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false    \n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    // componentDidCatch(err, info) {\n    //      console.log(err, info);\n    //      this.setState({error: true});\n    // }\n\n\n    updateChar = () => {\n        const{charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n\n    //    this.foo.bar = 0;\n    }\n\n    onCharLoaded = (char) => {\n        console.log('update');\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;//заглушка если не выбран персонаж        \n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content =!(loading || error || !char) ? <View char={char}/> : null;\n\n\n        return (\n            <div className=\"char__info\">\n             {skeleton}\n             {errorMessage}\n             {spinner}\n             {content}   \n            </div>\n        )\n    }\n\n    \n}\n\n    const View = ({char}) => {\n        const {name, description, thumbnail, homepage, wiki, comics} = char;\n        \n        let imgStyle = {'objectFit' : 'cover'};\n        if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            imgStyle = {'objectFit' : 'unset'};\n        }\n\n        return (\n            <>\n                <div className=\"char__basics\">\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}                \n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {comics.length > 0 ? null : \"There is no comics with this character\"}\n                    {\n                        comics.map((item, i) => {\n                            \n                            // eslint-disable-next-line\n                            if (i > 9) return;\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n                            })\n                    }\n                    \n                   \n                </ul>\n            </>\n        )\n    }\nCharInfo.propTypes = {\n    charId: PropTypes.string\n}\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\n\nimport decoration from '../../resources/img/vision.png';\n\n \nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    // toggleRandomChar = () => {\n    //     this.setState((state) => {\n    //         return {\n    //             showRandomChar: !state.showRandomChar\n    //         }\n    //     })\n    // }\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    {/* {this.state.showRandomChar ? <RandomChar/> : null}\n                    <button onClick={this.toggleRandomChar}> Click me</button>  */}\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n//import MarvelService from './services/MarvelService';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}